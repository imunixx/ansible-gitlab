#!/usr/bin/env bash
# entrypoint.sh
if [ ! -f /etc/gitlab-runner/config.toml ]
then
    gitlab-runner register register \
      --non-interactive \
      --config=/etc/gitlab-runner/config.toml \
      --name="Runner {{ ansible_hostname }}" \
      --url="{{ gitlab_runner_gitlab_url }}" \
      --registration-token="{{ gitlab_runner_registration_token }}" \
      --request-concurrency="{{ gitlab_runner_concurrent }}" \
      --executor="docker" \
      --docker-image="{{gitlab_runner_default_image }}" \
      --tag-list="docker" \
      --run-untagged="true" \
      --locked="false" \
      --access-level="not_protected" \
      --docker-volumes="/cache" \
      {% if gitlab_runner_socket_binding %}
      --docker-volumes="/var/run/docker.sock:/var/run/docker.sock"
      {% endif %}

fi

# gitlab-runner data directory
DATA_DIR="/etc/gitlab-runner"
CONFIG_FILE=${CONFIG_FILE:-$DATA_DIR/config.toml}
# custom certificate authority path
CA_CERTIFICATES_PATH=${CA_CERTIFICATES_PATH:-$DATA_DIR/certs/ca.crt}
LOCAL_CA_PATH="/usr/local/share/ca-certificates/ca.crt"

update_ca() {
  echo "Updating CA certificates..."
  cp "${CA_CERTIFICATES_PATH}" "${LOCAL_CA_PATH}"
  update-ca-certificates --fresh >/dev/null
}

if [ -f "${CA_CERTIFICATES_PATH}" ]; then
  # update the ca if the custom ca is different than the current
  cmp --silent "${CA_CERTIFICATES_PATH}" "${LOCAL_CA_PATH}" || update_ca
fi

# launch gitlab-runner passing all arguments
exec gitlab-runner "$@"
